// routes/movies.js - ORDEN CORREGIDO
const express = require('express');
const router = express.Router();
const Movie = require('../models/Movie');
const { authenticateToken } = require('../middleware/auth');
const recommendationsController = require('../controllers/movies/recommendationsController');
const {
  getAllMovies,
  getMovieById,
  createMovie,
  updateMovie,
  deleteMovie,
  getGenres,
  getPopularMovies,
  getMovieStats,
  searchMovies
} = require('../controllers/movies/movieController');

// ‚úÖ RUTAS ESPEC√çFICAS PRIMERO (antes de /:id)

// GET /api/movies/search?q=termino - Buscar pel√≠culas
router.get('/search', searchMovies);

// GET /api/movies/genres - Obtener todos los g√©neros disponibles
router.get('/genres', getGenres);

// GET /api/movies/popular - Obtener pel√≠culas m√°s populares
router.get('/popular', getPopularMovies);

// üéØ NUEVA: GET /api/movies/recommendations - Obtener recomendaciones (DEBE IR ANTES DE /:id)
router.get('/recommendations', authenticateToken, recommendationsController.getUserRecommendations);

// ‚úÖ RUTAS GENERALES DESPU√âS

// GET /api/movies - Obtener todas las pel√≠culas (con filtros opcionales)
router.get('/', getAllMovies);

// GET /api/movies/:id - Obtener pel√≠cula por ID
router.get('/:id', getMovieById);

// GET /api/movies/:id/stats - Obtener estad√≠sticas de una pel√≠cula
router.get('/:id/stats', getMovieStats);

// Rutas para administradores

// POST /api/movies - Crear nueva pel√≠cula
router.post('/', createMovie);

// PUT /api/movies/:id - Actualizar pel√≠cula
router.put('/:id', updateMovie);

// DELETE /api/movies/:id - Eliminar pel√≠cula (soft delete)
router.delete('/:id', deleteMovie);

module.exports = router;